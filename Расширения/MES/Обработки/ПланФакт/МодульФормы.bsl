
&НаСервере
Процедура ЗаполнитьПоСпецификации(ТЗПлан,Спецификация,ЗаказНаПроизводство,КоличествоПродукции,Продукция)
	//1. Найдём количество по спецификации и вычислим Кф
	КоличествоПоСпецификации = 1;
	Для Каждого СтрПрод Из Спецификация.ВыходныеИзделия Цикл
		Если СтрПрод.Номенклатура = Продукция Тогда
			КоличествоПоСпецификации = СтрПрод.КоличествоУпаковок;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	КфКол = КоличествоПродукции/КоличествоПоСпецификации;
	//Пробежим по материалам
	Для Каждого СтрМат Из Спецификация.МатериалыИУслуги Цикл
		Если (СтрМат.СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации) и (ЗначениеЗаполнено(СтрМат.ИсточникПолученияПолуфабриката)=Истина) Тогда
			ЗаполнитьПоСпецификации(ТЗПлан,СтрМат.ИсточникПолученияПолуфабриката,ЗаказНаПроизводство,КфКол*СтрМат.КоличествоУпаковок,СтрМат.Номенклатура);
		Иначе
			//Добавляем строку
			СтрокаРез = ТЗПлан.Добавить();
			СтрокаРез.ЗаказНаПроизводство = ЗаказНаПроизводство;
			СтрокаРез.Спецификация = Спецификация;
			СтрокаРез.Подразделение = ЗаказНаПроизводство.Подразделение;
			СтрокаРез.Организация = ЗаказНаПроизводство.Организация;
			СтрокаРез.ТипЗатрат = "Материалы";
			СтрокаРез.Затрата = СтрМат.Номенклатура;
			СтрокаРез.План = КфКол*СтрМат.КоличествоУпаковок;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрТруд Из Спецификация.Трудозатраты Цикл
		//Добавляем строку
		СтрокаРез = ТЗПлан.Добавить();
		СтрокаРез.ЗаказНаПроизводство = ЗаказНаПроизводство;
		СтрокаРез.Спецификация = Спецификация;
		СтрокаРез.Подразделение = ЗаказНаПроизводство.Подразделение;
		СтрокаРез.Организация = ЗаказНаПроизводство.Организация;
		СтрокаРез.ТипЗатрат = "Трудозатраты";
		СтрокаРез.Затрата = СтрТруд.ВидРабот;
		СтрокаРез.План = КфКол*СтрТруд.Количество;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере(ТабДок)
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	Макет = ОтчетОбъект.ПолучитьМакет("ПланФакт");
	//1. Выведем шапку
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.ТекстПериод = ПредставлениеПериода(НачалоДня(Отчет.ДатаНачала),КонецДня(Отчет.ДатаОкончания));
	Отборы="";
	Если ЗначениеЗаполнено(Отчет.Организация)=Истина Тогда
		Отборы="Организация: "+Отчет.Организация;
	КонецЕсли;
	Если ЗначениеЗаполнено(Отчет.Подразделение)=Истина Тогда
		Если Отборы="" Тогда
			Отборы="Подразделение: "+Отчет.Подразделение;
		Иначе
			Отборы = Отборы + ", "+"Подразделение: "+Отчет.Подразделение;
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(Отчет.ЗаказНаПроизводство)=Истина Тогда
		Если Отборы="" Тогда
			Отборы="Документ: "+Отчет.ЗаказНаПроизводство;
		Иначе
			Отборы = Отборы + ", "+"Документ: "+Отчет.ЗаказНаПроизводство;
		КонецЕсли;
	КонецЕсли;
	ОбластьМакета.Параметры.ТекстОтборы = Отборы;
	ТабДок.Вывести(ОбластьМакета);
	//1. Соберем заказы на производство.
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗаказНаПроизводство2_2.Ссылка КАК ЗаказНаПроизводство,
	               |	ЗаказНаПроизводство2_2.Ссылка.Подразделение КАК Подразделение,
	               |	ЗаказНаПроизводство2_2.Ссылка.Организация КАК Организация
	               |ИЗ
	               |	Документ.ЗаказНаПроизводство2_2 КАК ЗаказНаПроизводство2_2
	               |ГДЕ
	               |	ЗаказНаПроизводство2_2.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И ЗаказНаПроизводство2_2.Ссылка.Проведен = ИСТИНА
	               |	И ВЫБОР
	               |			КОГДА &Подразделение = &ПодразделениеПустаяСсылка
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ЗаказНаПроизводство2_2.Ссылка.Подразделение = &Подразделение
	               |						ТОГДА ИСТИНА
	               |					ИНАЧЕ ЛОЖЬ
	               |				КОНЕЦ
	               |		КОНЕЦ
	               |	И ВЫБОР
	               |			КОГДА &Организация = &ОрганизацияПустаяСсылка
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ЗаказНаПроизводство2_2.Ссылка.Организация = &Организация
	               |						ТОГДА ИСТИНА
	               |					ИНАЧЕ ЛОЖЬ
	               |				КОНЕЦ
	               |		КОНЕЦ
	               |	И ВЫБОР
	               |			КОГДА &ЗаказНаПроизводство = &ЗаказНаПроизводствоПустаяСсылка
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ЗаказНаПроизводство2_2.Ссылка = &ЗаказНаПроизводство
	               |						ТОГДА ИСТИНА
	               |					ИНАЧЕ ЛОЖЬ
	               |				КОНЕЦ
	               |		КОНЕЦ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗаказНаПроизводство2_2.Ссылка,
	               |	ЗаказНаПроизводство2_2.Ссылка.Подразделение,
	               |	ЗаказНаПроизводство2_2.Ссылка.Организация";
	Запрос.УстановитьПараметр("ДатаНачала",НачалоДня(Отчет.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания",КонецДня(Отчет.ДатаОкончания));
	Запрос.УстановитьПараметр("Организация",Отчет.Организация);
	Запрос.УстановитьПараметр("Подразделение",Отчет.Подразделение);
	Запрос.УстановитьПараметр("ЗаказНаПроизводство",Отчет.ЗаказНаПроизводство);
	Запрос.УстановитьПараметр("ОрганизацияПустаяСсылка",Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПодразделениеПустаяСсылка",Справочники.СтруктураПредприятия.ПустаяСсылка());
	Запрос.УстановитьПараметр("ЗаказНаПроизводствоПустаяСсылка",Документы.ЗаказНаПроизводство2_2.ПустаяСсылка());
	ТЗТаб = Запрос.Выполнить().Выгрузить();
    //Теперь получим плановые данные из спецификаций
	ТЗПлан = ТЗТаб.Скопировать(,);
	ТЗПлан.Очистить();
	ТЗПлан.Колонки.Добавить("Спецификация",Новый ОписаниеТипов("СправочникСсылка.РесурсныеСпецификации"));
	КвалификаторыСтроки = Новый КвалификаторыСтроки(20);
    ОписаниеСтроки = Новый ОписаниеТипов("Строка", ,КвалификаторыСтроки);
	ТЗПлан.Колонки.Добавить("ТипЗатрат",ОписаниеСтроки);
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.Номенклатура"));
	Массив.Добавить(Тип("СправочникСсылка.ВидыРаботСотрудников"));
	ТЗПлан.Колонки.Добавить("Затрата", Новый ОписаниеТипов(Массив));
	ТЗПлан.Колонки.Добавить("Этап",Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	ТЗПлан.Колонки.Добавить("План",Новый ОписаниеТипов("Число"));
	Для Каждого СтрТЗТаб Из ТЗТаб Цикл
		Для Каждого СтрЗаказ Из СтрТЗТаб.ЗаказНаПроизводство.Продукция Цикл
			Если (ЗначениеЗаполнено(СтрЗаказ.Спецификация)=Истина) и (СтрЗаказ.Количество>0) Тогда
				ЗаполнитьПоСпецификации(ТЗПлан,СтрЗаказ.Спецификация,СтрТЗТаб.ЗаказНаПроизводство,СтрЗаказ.Количество,СтрЗаказ.Номенклатура);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	//Собираем фактические данные из ркгистра себестоимость (материалы) и трудозатратыкоформлению (трудозатраты)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СебестоимостьТоваров.Партия.Документ.Ссылка КАК ЗаказНаПроизводство,
	               |	СебестоимостьТоваров.Партия.Документ.Подразделение КАК Подразделение,
	               |	СебестоимостьТоваров.Организация КАК Организация,
	               |	СебестоимостьТоваров.Количество КАК Факт,
	               |	СебестоимостьТоваров.Регистратор.Ссылка КАК Этап,
	               |	СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура КАК Затрата,
	               |	СебестоимостьТоваров.Регистратор.Спецификация КАК Спецификация,
	               |	""Материалы"" КАК ТипЗатрат
	               |ИЗ
	               |	РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &Организация = &ОрганизацияПустаяСсылка
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ СебестоимостьТоваров.Организация = &Организация
	               |		КОНЕЦ
	               |	И ВЫБОР
	               |			КОГДА &Подразделение = &ПодразделениеПустаяСсылка
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ СебестоимостьТоваров.Партия.Документ.Подразделение = &Подразделение
	               |		КОНЕЦ
	               |	И ВЫБОР
	               |			КОГДА &ЗаказНаПроизводство = &ЗаказНаПроизводствоПустаяСсылка
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ СебестоимостьТоваров.Партия.Документ.Ссылка = &ЗаказНаПроизводство
	               |		КОНЕЦ
	               |	И СебестоимостьТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |	И СебестоимостьТоваров.РазделУчета = &РазделУчета
	               |	И СебестоимостьТоваров.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И СебестоимостьТоваров.Количество <> 0
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ТрудозатратыКОформлению.ПартияПроизводства.Документ.Ссылка,
	               |	ТрудозатратыКОформлению.ПартияПроизводства.Документ.Подразделение,
	               |	ТрудозатратыКОформлению.Организация,
	               |	ТрудозатратыКОформлению.Количество,
	               |	ТрудозатратыКОформлению.Регистратор.Ссылка,
	               |	ТрудозатратыКОформлению.ВидРабот,
	               |	ТрудозатратыКОформлению.Регистратор.Спецификация,
	               |	""Трудозатраты""
	               |ИЗ
	               |	РегистрНакопления.ТрудозатратыКОформлению КАК ТрудозатратыКОформлению
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &Организация = &ОрганизацияПустаяСсылка
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ТрудозатратыКОформлению.Организация = &Организация
	               |		КОНЕЦ
	               |	И ВЫБОР
	               |			КОГДА &Подразделение = &ПодразделениеПустаяСсылка
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ТрудозатратыКОформлению.ПартияПроизводства.Документ.Подразделение = &Подразделение
	               |		КОНЕЦ
	               |	И ВЫБОР
	               |			КОГДА &ЗаказНаПроизводство = &ЗаказНаПроизводствоПустаяСсылка
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ТрудозатратыКОформлению.ПартияПроизводства.Документ.Ссылка = &ЗаказНаПроизводство
	               |		КОНЕЦ
	               |	И ТрудозатратыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |	И ТрудозатратыКОформлению.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И ТрудозатратыКОформлению.Количество <> 0";
	Запрос.УстановитьПараметр("ДатаНачала",НачалоДня(Отчет.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания",КонецДня(Отчет.ДатаОкончания));
	Запрос.УстановитьПараметр("Организация",Отчет.Организация);
	Запрос.УстановитьПараметр("Подразделение",Отчет.Подразделение);
	Запрос.УстановитьПараметр("ЗаказНаПроизводство",Отчет.ЗаказНаПроизводство);
	Запрос.УстановитьПараметр("ОрганизацияПустаяСсылка",Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПодразделениеПустаяСсылка",Справочники.СтруктураПредприятия.ПустаяСсылка());
	Запрос.УстановитьПараметр("ЗаказНаПроизводствоПустаяСсылка",Документы.ЗаказНаПроизводство2_2.ПустаяСсылка());
	Запрос.УстановитьПараметр("РазделУчета",Перечисления.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство);
	ТЗФакт = Запрос.Выполнить().Выгрузить();
	ТЗПлан.Свернуть("Подразделение,ЗаказНаПроизводство,Организация,ТипЗатрат,Затрата,Спецификация","План");
	ТЗФакт.Свернуть("Подразделение,ЗаказНаПроизводство,Организация,ТипЗатрат,Затрата,Спецификация,Этап","Факт");
	//Объединим таблицы
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТЗПлан.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	               |	ТЗПлан.Подразделение КАК Подразделение,
	               |	ТЗПлан.Организация КАК Организация,
	               |	ТЗПлан.Спецификация КАК Спецификация,
	               |	ТЗПлан.ТипЗатрат КАК ТипЗатрат,
	               |	ТЗПлан.Затрата КАК Затрата,
	               |	ТЗПлан.План КАК План,
	               |	0 КАК Факт,
	               |	ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка) КАК Этап
	               |ПОМЕСТИТЬ ТЗПлан
	               |ИЗ
	               |	&ТЗПлан КАК ТЗПлан
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗФакт.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	               |	ТЗФакт.Подразделение КАК Подразделение,
	               |	ТЗФакт.Организация КАК Организация,
	               |	ТЗФакт.Спецификация КАК Спецификация,
	               |	ТЗФакт.ТипЗатрат КАК ТипЗатрат,
	               |	ТЗФакт.Затрата КАК Затрата,
	               |	ТЗФакт.Факт КАК Факт,
	               |	ТЗФакт.Этап КАК Этап,
	               |	0 КАК План
	               |ПОМЕСТИТЬ ТЗФакт
	               |ИЗ
	               |	&ТЗФакт КАК ТЗФакт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗПлан.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	               |	ТЗПлан.Подразделение КАК Подразделение,
	               |	ТЗПлан.Организация КАК Организация,
	               |	ТЗПлан.Спецификация КАК Спецификация,
	               |	ТЗПлан.ТипЗатрат КАК ТипЗатрат,
	               |	ТЗПлан.Затрата КАК Затрата,
	               |	ТЗПлан.План КАК План,
	               |	ТЗПлан.Факт КАК Факт,
	               |	ТЗПлан.Этап КАК Этап
	               |ИЗ
	               |	ТЗПлан КАК ТЗПлан
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ТЗФакт.ЗаказНаПроизводство,
	               |	ТЗФакт.Подразделение,
	               |	ТЗФакт.Организация,
	               |	ТЗФакт.Спецификация,
	               |	ТЗФакт.ТипЗатрат,
	               |	ТЗФакт.Затрата,
	               |	ТЗФакт.План,
	               |	ТЗФакт.Факт,
	               |	ТЗФакт.Этап
	               |ИЗ
	               |	ТЗФакт КАК ТЗФакт";

	Запрос.УстановитьПараметр("ТЗПлан",ТЗПлан);
	Запрос.УстановитьПараметр("ТЗФакт",ТЗФакт);
	ТЗРезультат = Запрос.Выполнить().Выгрузить();
	////Выведем результат
	ТЗРезультат.Свернуть("Подразделение,ЗаказНаПроизводство,ТипЗатрат,Затрата,Спецификация,Этап","План,Факт");
	ТЗРезультат.Сортировать("Подразделение,ЗаказНаПроизводство,ТипЗатрат,Затрата,Спецификация,Этап");
	ОбластьГруппа = Макет.ПолучитьОбласть("Группа");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ТекПодразделение="новый";
	ТекТипЗатрат="новый";
	ТекЗаказНаПроизводство = "новый";
	ТекЗатрата = "новый";
	СГПлан = 0;
	СГФакт = 0;
	ТабДок.НачатьАвтогруппировкуСтрок();
	инд = -1;
	Для Каждого СтрРезультат Из ТЗРезультат Цикл
		инд = инд +1;
		Если ТекПодразделение<>СтрРезультат.Подразделение Тогда
			ОбластьГруппа.Параметры.Группа = СтрРезультат.Подразделение;
			ТабДок.Вывести(ОбластьГруппа,1,"Подразделение",Истина);
			ТекПодразделение = СтрРезультат.Подразделение;
			ОбластьГруппа.Параметры.Группа = СтрРезультат.ЗаказНаПроизводство;
			ТабДок.Вывести(ОбластьГруппа,2,"Заказ на производство",Истина);
			ТекЗаказНаПроизводство = СтрРезультат.ЗаказНаПроизводство;
			ОбластьГруппа.Параметры.Группа = СтрРезультат.ТипЗатрат;
			ТабДок.Вывести(ОбластьГруппа,3,"Тип затрат",Истина);
			ТекТипЗатрат = СтрРезультат.ТипЗатрат;

			ОбластьГруппа.Параметры.СГПлан = СГПлан;
			ОбластьГруппа.Параметры.СГФакт = СГФакт;
			ОбластьГруппа.Параметры.СГОтклонение = СГПлан - СГФакт;
			ОбластьГруппа.Параметры.СГОтклонениеП = 100 ;
			Если СГПлан > 0 Тогда
				ОбластьГруппа.Параметры.СГОтклонениеП = (СГПлан - СГФакт)*100/СГПлан ;
			КонецЕсли;
			ОбластьГруппа.Параметры.Группа = "Подытог:";

			Если инд > 0 Тогда
				  ТабДок.Вывести(ОбластьГруппа,5,"Затрата",Истина);
			КонецЕсли;
			ОбластьГруппа.Параметры.СГПлан = 0;
			ОбластьГруппа.Параметры.СГФакт = 0;
			ОбластьГруппа.Параметры.СГОтклонение = 0;
			ОбластьГруппа.Параметры.СГОтклонениеП= 0;
			ОбластьГруппа.Параметры.Группа = СтрРезультат.Затрата;

			ТекЗатрата = СтрРезультат.Затрата;
			ТабДок.Вывести(ОбластьГруппа,4,"Затрата",Истина);
			СГПлан = 0;
			СГФакт = 0;

		КонецЕсли;
		Если ТекЗаказНаПроизводство<>СтрРезультат.ЗаказНаПроизводство Тогда
			ОбластьГруппа.Параметры.Группа = СтрРезультат.ЗаказНаПроизводство;
			ТабДок.Вывести(ОбластьГруппа,2,"Заказ на производство",Истина);
			ТекЗаказНаПроизводство = СтрРезультат.ЗаказНаПроизводство;
			ОбластьГруппа.Параметры.Группа = СтрРезультат.ТипЗатрат;
			ТабДок.Вывести(ОбластьГруппа,3,"Тип затрат",Истина);
			ТекТипЗатрат = СтрРезультат.ТипЗатрат;

			ОбластьГруппа.Параметры.СГПлан = СГПлан;
			ОбластьГруппа.Параметры.СГФакт = СГФакт;
			ОбластьГруппа.Параметры.СГОтклонение = СГПлан - СГФакт;
			ОбластьГруппа.Параметры.СГОтклонениеП = 100 ;
			Если СГПлан > 0 Тогда
				ОбластьГруппа.Параметры.СГОтклонениеП = (СГПлан - СГФакт)*100/СГПлан ;
			КонецЕсли;
			ОбластьГруппа.Параметры.Группа = "Подытог:";
			Если инд > 0 Тогда
				  ТабДок.Вывести(ОбластьГруппа,5,"Затрата",Истина);
			КонецЕсли;
			ОбластьГруппа.Параметры.СГПлан = 0;
			ОбластьГруппа.Параметры.СГФакт = 0;
			ОбластьГруппа.Параметры.СГОтклонение = 0;
			ОбластьГруппа.Параметры.СГОтклонениеП= 0;

			ОбластьГруппа.Параметры.Группа = СтрРезультат.Затрата;

			ТекЗатрата = СтрРезультат.Затрата;
			ТабДок.Вывести(ОбластьГруппа,4,"Затрата",Истина);
			СГПлан = 0;
			СГФакт = 0;

		КонецЕсли;
		Если ТекТипЗатрат<>СтрРезультат.ТипЗатрат Тогда
			ОбластьГруппа.Параметры.Группа = СтрРезультат.ТипЗатрат;
			ТабДок.Вывести(ОбластьГруппа,3,"Тип затрат",Истина);
			ТекТипЗатрат = СтрРезультат.ТипЗатрат;

			ОбластьГруппа.Параметры.СГПлан = СГПлан;
			ОбластьГруппа.Параметры.СГФакт = СГФакт;
			ОбластьГруппа.Параметры.СГОтклонение = СГПлан - СГФакт;
			ОбластьГруппа.Параметры.СГОтклонениеП = 100 ;
			Если СГПлан > 0 Тогда
				ОбластьГруппа.Параметры.СГОтклонениеП = (СГПлан - СГФакт)*100/СГПлан ;
			КонецЕсли;
			ОбластьГруппа.Параметры.Группа = "Подытог:";
			Если инд > 0 Тогда
				  ТабДок.Вывести(ОбластьГруппа,5,"Затрата",Истина);
			КонецЕсли;
			ОбластьГруппа.Параметры.СГПлан = 0;
			ОбластьГруппа.Параметры.СГФакт = 0;
			ОбластьГруппа.Параметры.СГОтклонение = 0;
			ОбластьГруппа.Параметры.СГОтклонениеП= 0;

			ОбластьГруппа.Параметры.Группа = СтрРезультат.Затрата;

			ТекЗатрата = СтрРезультат.Затрата;
			ТабДок.Вывести(ОбластьГруппа,4,"Затрата",Истина);
			СГПлан = 0;
			СГФакт = 0;

		КонецЕсли;
		Если ТекЗатрата<>СтрРезультат.Затрата Тогда
			ТекЗатрата = СтрРезультат.Затрата;
			ОбластьГруппа.Параметры.СГПлан = СГПлан;
			ОбластьГруппа.Параметры.СГФакт = СГФакт;
			ОбластьГруппа.Параметры.СГОтклонение = СГПлан - СГФакт;
			ОбластьГруппа.Параметры.СГОтклонениеП = 100 ;
			Если СГПлан > 0 Тогда
				ОбластьГруппа.Параметры.СГОтклонениеП = (СГПлан - СГФакт)*100/СГПлан ;
			КонецЕсли;
			ОбластьГруппа.Параметры.Группа = "Подытог:";
			Если инд > 0 Тогда
				  ТабДок.Вывести(ОбластьГруппа,5,"Затрата",Истина);
			КонецЕсли;
			ОбластьГруппа.Параметры.СГПлан = 0;
			ОбластьГруппа.Параметры.СГФакт = 0;
			ОбластьГруппа.Параметры.СГОтклонение = 0;
			ОбластьГруппа.Параметры.СГОтклонениеП= 0;
			ОбластьГруппа.Параметры.Группа = СтрРезультат.Затрата;
			ТабДок.Вывести(ОбластьГруппа,4,"Затрата",Истина);
			СГПлан = 0;
			СГФакт = 0;
		КонецЕсли;

		ОбластьСтрока.Параметры.Заполнить(СтрРезультат);
		ОбластьСтрока.Параметры.ЕдИзм = СтрРезультат.Затрата.ЕдиницаИзмерения.НаименованиеПолное;
		//ОбластьСтрока.Параметры.Отклонение = СтрРезультат.План - СтрРезультат.Факт;
		ТабДок.Вывести(ОбластьСтрока,5,"Строка",Истина);
		СГПлан = СГПлан + СтрРезультат.План;
		СГФакт = СГФакт + СтрРезультат.Факт;
		Если инд = ТЗРезультат.Количество()-1 Тогда
			ОбластьГруппа.Параметры.СГПлан = СГПлан;
			ОбластьГруппа.Параметры.СГФакт = СГФакт;
			ОбластьГруппа.Параметры.СГОтклонение = СГПлан - СГФакт;

			ОбластьГруппа.Параметры.СГОтклонениеП = 100 ;
			Если СГПлан > 0 Тогда
				ОбластьГруппа.Параметры.СГОтклонениеП = (СГПлан - СГФакт)*100/СГПлан ;
			КонецЕсли;

			ОбластьГруппа.Параметры.Группа = "Подытог:";
			ТабДок.Вывести(ОбластьГруппа,5,"Затрата",Истина);
		КонецЕсли;

	КонецЦикла;
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	// Формируем отчет...
	Если (ЗначениеЗаполнено(Отчет.ДатаНачала)=Истина) И (ЗначениеЗаполнено(Отчет.ДатаОкончания)=Истина) И (Отчет.ДатаОкончания>=Отчет.ДатаНачала) Тогда
		ТабДок = Новый ТабличныйДокумент;
		СформироватьНаСервере(ТабДок);
		ТабДок.ТолькоПросмотр = Истина;
		ТабДок.ОтображатьСетку = Ложь;
		ТабДок.АвтоМасштаб = Истина;
		ТабДок.ОтображатьГруппировки = Истина;
		ТабДок.ОтображатьЗаголовки = Истина;
		ТабДок.Показать("ПланФакт");
	Иначе
		ПоказатьПредупреждение(,"Некорректный период!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	Оповещение = Новый ОписаниеОповещения(
		"ВыбратьПериодЗавершение",
		ЭтотОбъект);

	ОбщегоНазначенияУТКлиент.РедактироватьПериод(
		Отчет,
		Новый Структура("ДатаНачала, ДатаОкончания", "ДатаНачала", "ДатаОкончания"),
		Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(Период, ДополнительныеПараметры) Экспорт
	Если Период <> Неопределено Тогда
		ПроверитьПериод();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ПроверитьПериод();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	ПроверитьПериод();
КонецПроцедуры

&НаСервере
Процедура ПроверитьПериодНаСервере(Сообщение)
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПериод()
	Сообщение="";
	ПроверитьПериодНаСервере(Сообщение);
	Если Сообщение<>"" Тогда
		ПоказатьПредупреждение(,Сообщение);
	КонецЕсли;
КонецПроцедуры
